// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReciicerAPI.Data;

#nullable disable

namespace ReciicerAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250317061024_FieldsToEstoque")]
    partial class FieldsToEstoque
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "298f1256-ec97-4797-966c-d813afa14f70",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "8a62bbbf-8420-459c-94d3-9da153f3803f",
                            Name = "Operador",
                            NormalizedName = "OPERADOR"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "8868b1f4-812f-4bbd-a438-1b25f7241f78",
                            RoleId = "298f1256-ec97-4797-966c-d813afa14f70"
                        },
                        new
                        {
                            UserId = "02f34b97-229a-4764-ba00-2298903959c5",
                            RoleId = "8a62bbbf-8420-459c-94d3-9da153f3803f"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Reciicer.Models.Entities.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CNPJ")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PontuacaoTotal")
                        .HasColumnType("int");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cliente");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CPF = "777.777.777-77",
                            DataCadastro = new DateTime(2025, 3, 17, 3, 10, 24, 25, DateTimeKind.Local).AddTicks(9918),
                            Email = "jurandir@gmail.com",
                            Nome = "Jurandir",
                            PontuacaoTotal = 15,
                            Telefone = "(65) 4984-9849"
                        },
                        new
                        {
                            Id = 2,
                            CPF = "544.894.849-98",
                            DataCadastro = new DateTime(2025, 3, 17, 3, 10, 24, 25, DateTimeKind.Local).AddTicks(9930),
                            Email = "judit@gmail.com",
                            Nome = "Judit",
                            PontuacaoTotal = 0,
                            Telefone = "(54) 4545-4544"
                        },
                        new
                        {
                            Id = 3,
                            CPF = "894.399.251-32",
                            DataCadastro = new DateTime(2025, 3, 17, 3, 10, 24, 25, DateTimeKind.Local).AddTicks(9932),
                            Email = "astolfo@gmail.com",
                            Nome = "Astolfo",
                            PontuacaoTotal = 0,
                            Telefone = "(92) 98308-7102"
                        },
                        new
                        {
                            Id = 4,
                            CNPJ = "54.594.954/9549-89",
                            DataCadastro = new DateTime(2025, 3, 17, 3, 10, 24, 25, DateTimeKind.Local).AddTicks(9933),
                            Email = "manoel@padaria.com",
                            Nome = "Padaria Manoel",
                            PontuacaoTotal = 0,
                            Telefone = "(31) 98371-8402"
                        });
                });

            modelBuilder.Entity("Reciicer.Models.Entities.ClientePremiacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataOperacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("PremiacaoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("PremiacaoId");

                    b.ToTable("ClientePremiacao");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClienteId = 3,
                            DataOperacao = new DateTime(2024, 11, 21, 4, 23, 6, 153, DateTimeKind.Local),
                            PremiacaoId = 3
                        });
                });

            modelBuilder.Entity("Reciicer.Models.Entities.Coleta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataOperacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("PontoColetaId")
                        .HasColumnType("int");

                    b.Property<int>("PontuacaoGanha")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("PontoColetaId");

                    b.ToTable("Coleta");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ativo = false,
                            ClienteId = 1,
                            DataOperacao = new DateTime(2025, 3, 17, 3, 10, 24, 26, DateTimeKind.Local).AddTicks(147),
                            PontoColetaId = 2,
                            PontuacaoGanha = 10
                        },
                        new
                        {
                            Id = 2,
                            Ativo = false,
                            ClienteId = 1,
                            DataOperacao = new DateTime(2025, 3, 17, 3, 10, 24, 26, DateTimeKind.Local).AddTicks(148),
                            PontoColetaId = 2,
                            PontuacaoGanha = 5
                        });
                });

            modelBuilder.Entity("Reciicer.Models.Entities.Cooperativa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CNPJ")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cooperativa");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CNPJ = "00.000.000/0000-00",
                            Email = "",
                            Nome = "Cooperativa de Reciclagem"
                        });
                });

            modelBuilder.Entity("Reciicer.Models.Entities.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Rua")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Endereco");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Bairro = "Bairro 1",
                            Cep = "60000-000",
                            Cidade = "Cidade 1",
                            Estado = "Estado 1",
                            Numero = 1,
                            Rua = "Rua 1"
                        },
                        new
                        {
                            Id = 2,
                            Bairro = "Bairro 2",
                            Cep = "60000-001",
                            Cidade = "Cidade 2",
                            Estado = "Estado 2",
                            Numero = 2,
                            Rua = "Rua 2"
                        });
                });

            modelBuilder.Entity("Reciicer.Models.Entities.Estoque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacidade")
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PesoArmazenado")
                        .HasColumnType("int");

                    b.Property<int>("PontoColetaId")
                        .HasColumnType("int");

                    b.Property<int>("QuantidadeArmazenada")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PontoColetaId");

                    b.ToTable("Estoque");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacidade = 10,
                            Codigo = "PR001",
                            PesoArmazenado = 0,
                            PontoColetaId = 1,
                            QuantidadeArmazenada = 0,
                            Tipo = "Interno"
                        },
                        new
                        {
                            Id = 2,
                            Capacidade = 5,
                            Codigo = "PRN001",
                            PesoArmazenado = 0,
                            PontoColetaId = 2,
                            QuantidadeArmazenada = 0,
                            Tipo = "Externo"
                        });
                });

            modelBuilder.Entity("Reciicer.Models.Entities.EstoqueMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EstoqueId")
                        .HasColumnType("int");

                    b.Property<int>("MaterialId")
                        .HasColumnType("int");

                    b.Property<int>("Peso")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EstoqueId");

                    b.HasIndex("MaterialId");

                    b.ToTable("EstoqueMaterial");
                });

            modelBuilder.Entity("Reciicer.Models.Entities.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PontuacaoPeso")
                        .HasColumnType("int");

                    b.Property<int>("PontuacaoUnidade")
                        .HasColumnType("int");

                    b.Property<int?>("TempoDegradacao")
                        .HasColumnType("int");

                    b.Property<int>("TipoMaterialId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoMaterialId");

                    b.ToTable("Material");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descricao = "Papelão",
                            Nome = "Papelão",
                            PontuacaoPeso = 20,
                            PontuacaoUnidade = 2,
                            TempoDegradacao = 162000,
                            TipoMaterialId = 2
                        },
                        new
                        {
                            Id = 2,
                            Descricao = "Papel de presente",
                            Nome = "Papel Presente",
                            PontuacaoPeso = 10,
                            PontuacaoUnidade = 5,
                            TempoDegradacao = 150,
                            TipoMaterialId = 2
                        },
                        new
                        {
                            Id = 3,
                            Descricao = "Garrafa PET - Polietileno Tereftalato",
                            Nome = "PET",
                            PontuacaoPeso = 15,
                            PontuacaoUnidade = 3,
                            TempoDegradacao = 18000,
                            TipoMaterialId = 1
                        },
                        new
                        {
                            Id = 4,
                            Descricao = "Copo de Vidro",
                            Nome = "Copo",
                            PontuacaoPeso = 25,
                            PontuacaoUnidade = 10,
                            TempoDegradacao = 1000000,
                            TipoMaterialId = 3
                        });
                });

            modelBuilder.Entity("Reciicer.Models.Entities.Material_Coleta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ColetaId")
                        .HasColumnType("int");

                    b.Property<int>("MaterialId")
                        .HasColumnType("int");

                    b.Property<int>("Peso")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ColetaId");

                    b.HasIndex("MaterialId");

                    b.ToTable("Material_Coleta");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ColetaId = 1,
                            MaterialId = 3,
                            Peso = 5,
                            Quantidade = 0
                        });
                });

            modelBuilder.Entity("Reciicer.Models.Entities.PontoColeta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EnderecoId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId");

                    b.ToTable("PontoColeta");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EnderecoId = 1,
                            Nome = "Parmê"
                        },
                        new
                        {
                            Id = 2,
                            EnderecoId = 2,
                            Nome = "Supermercado Guanabara"
                        });
                });

            modelBuilder.Entity("Reciicer.Models.Entities.Premiacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PontuacaoRequerida")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Premiacao");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ativo = true,
                            Descricao = "Ingresso para 1 sessão de cinema",
                            Nome = "Ingresso UCI",
                            PontuacaoRequerida = 1000
                        },
                        new
                        {
                            Id = 2,
                            Ativo = false,
                            Descricao = "Desconto de 10% em compras até R$200,00 ",
                            Nome = "Desconto 10%",
                            PontuacaoRequerida = 100
                        },
                        new
                        {
                            Id = 3,
                            Ativo = true,
                            Descricao = "Boné personalizado ",
                            Nome = "Boné",
                            PontuacaoRequerida = 200
                        });
                });

            modelBuilder.Entity("Reciicer.Models.Entities.Recolhimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CooperativaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataRecolhimento")
                        .HasColumnType("datetime2");

                    b.Property<int>("PontoColetaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CooperativaId");

                    b.HasIndex("PontoColetaId");

                    b.ToTable("Recolhimento");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CooperativaId = 1,
                            DataRecolhimento = new DateTime(2024, 11, 21, 4, 23, 6, 153, DateTimeKind.Local),
                            PontoColetaId = 1
                        },
                        new
                        {
                            Id = 2,
                            CooperativaId = 1,
                            DataRecolhimento = new DateTime(2025, 2, 21, 6, 23, 6, 153, DateTimeKind.Local),
                            PontoColetaId = 2
                        });
                });

            modelBuilder.Entity("Reciicer.Models.Entities.RecolhimentoMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MaterialId")
                        .HasColumnType("int");

                    b.Property<int>("PesoTotal")
                        .HasColumnType("int");

                    b.Property<int>("QuantidadeTotal")
                        .HasColumnType("int");

                    b.Property<int>("RecolhimentoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.HasIndex("RecolhimentoId");

                    b.ToTable("RecolhimentoMaterial");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MaterialId = 1,
                            PesoTotal = 21,
                            QuantidadeTotal = 0,
                            RecolhimentoId = 1
                        },
                        new
                        {
                            Id = 2,
                            MaterialId = 2,
                            PesoTotal = 0,
                            QuantidadeTotal = 10,
                            RecolhimentoId = 2
                        });
                });

            modelBuilder.Entity("Reciicer.Models.Entities.TipoMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoMaterial");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ativo = true,
                            Descricao = "Plástico",
                            Nome = "Plástico"
                        },
                        new
                        {
                            Id = 2,
                            Ativo = true,
                            Descricao = "Papel",
                            Nome = "Papel"
                        },
                        new
                        {
                            Id = 3,
                            Ativo = true,
                            Descricao = "Vidro",
                            Nome = "Vidro"
                        },
                        new
                        {
                            Id = 4,
                            Ativo = true,
                            Descricao = "Metal",
                            Nome = "Metal"
                        });
                });

            modelBuilder.Entity("Reciicer.Models.Entities.UsuarioIdentity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("PontoColetaId")
                        .HasColumnType("int");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("PontoColetaId");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "8868b1f4-812f-4bbd-a438-1b25f7241f78",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "56006c13-7319-448b-8bc1-075f25634e32",
                            Email = "admin@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@GMAIL.COM",
                            NormalizedUserName = "ADMIN",
                            PasswordHash = "AQAAAAIAAYagAAAAELOGUtUv5slutFj/g2ySNtpAyK6JnEzlfSGIQVH2hL8onfOArNzzqS3hzh4KBbfBlg==",
                            PhoneNumberConfirmed = false,
                            PontoColetaId = 1,
                            SecurityStamp = "4c55f438-7920-4646-92c3-b39357247a18",
                            TwoFactorEnabled = false,
                            UserName = "admin"
                        },
                        new
                        {
                            Id = "02f34b97-229a-4764-ba00-2298903959c5",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "82e5346b-fcf8-4100-bccd-60f8da412209",
                            Email = "operador@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "OPERADOR@GMAIL.COM",
                            NormalizedUserName = "OPERADOR",
                            PasswordHash = "AQAAAAIAAYagAAAAEHQ7mga+DIAlOUen1rubIYWrGtJL/2ELlGuZQrZgvy/1u0aPPJa1UHG0VWqHJa06uA==",
                            PhoneNumberConfirmed = false,
                            PontoColetaId = 2,
                            SecurityStamp = "9982ee91-1e94-44e8-98d1-c6d34f3c93cf",
                            TwoFactorEnabled = false,
                            UserName = "operador"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Reciicer.Models.Entities.UsuarioIdentity", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Reciicer.Models.Entities.UsuarioIdentity", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Reciicer.Models.Entities.UsuarioIdentity", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Reciicer.Models.Entities.UsuarioIdentity", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Reciicer.Models.Entities.ClientePremiacao", b =>
                {
                    b.HasOne("Reciicer.Models.Entities.Cliente", "Cliente")
                        .WithMany("ClientePremiacoes")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Reciicer.Models.Entities.Premiacao", "Premiacao")
                        .WithMany("ClientePremiacaos")
                        .HasForeignKey("PremiacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Premiacao");
                });

            modelBuilder.Entity("Reciicer.Models.Entities.Coleta", b =>
                {
                    b.HasOne("Reciicer.Models.Entities.Cliente", "Cliente")
                        .WithMany("Coletas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Reciicer.Models.Entities.PontoColeta", "PontoColeta")
                        .WithMany("Coletas")
                        .HasForeignKey("PontoColetaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("PontoColeta");
                });

            modelBuilder.Entity("Reciicer.Models.Entities.Estoque", b =>
                {
                    b.HasOne("Reciicer.Models.Entities.PontoColeta", "PontoColeta")
                        .WithMany()
                        .HasForeignKey("PontoColetaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PontoColeta");
                });

            modelBuilder.Entity("Reciicer.Models.Entities.EstoqueMaterial", b =>
                {
                    b.HasOne("Reciicer.Models.Entities.Estoque", "Estoque")
                        .WithMany("EstoqueMateriais")
                        .HasForeignKey("EstoqueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Reciicer.Models.Entities.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estoque");

                    b.Navigation("Material");
                });

            modelBuilder.Entity("Reciicer.Models.Entities.Material", b =>
                {
                    b.HasOne("Reciicer.Models.Entities.TipoMaterial", "TipoMaterial")
                        .WithMany("Materiais")
                        .HasForeignKey("TipoMaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoMaterial");
                });

            modelBuilder.Entity("Reciicer.Models.Entities.Material_Coleta", b =>
                {
                    b.HasOne("Reciicer.Models.Entities.Coleta", "Coleta")
                        .WithMany("Material_Coletas")
                        .HasForeignKey("ColetaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Reciicer.Models.Entities.Material", "Material")
                        .WithMany("Material_Coletas")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coleta");

                    b.Navigation("Material");
                });

            modelBuilder.Entity("Reciicer.Models.Entities.PontoColeta", b =>
                {
                    b.HasOne("Reciicer.Models.Entities.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("Reciicer.Models.Entities.Recolhimento", b =>
                {
                    b.HasOne("Reciicer.Models.Entities.Cooperativa", "Cooperativa")
                        .WithMany("Recolhimentos")
                        .HasForeignKey("CooperativaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Reciicer.Models.Entities.PontoColeta", "PontoColeta")
                        .WithMany("Recolhimentos")
                        .HasForeignKey("PontoColetaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cooperativa");

                    b.Navigation("PontoColeta");
                });

            modelBuilder.Entity("Reciicer.Models.Entities.RecolhimentoMaterial", b =>
                {
                    b.HasOne("Reciicer.Models.Entities.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Reciicer.Models.Entities.Recolhimento", "Recolhimento")
                        .WithMany("RecolhimentoMateriais")
                        .HasForeignKey("RecolhimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");

                    b.Navigation("Recolhimento");
                });

            modelBuilder.Entity("Reciicer.Models.Entities.UsuarioIdentity", b =>
                {
                    b.HasOne("Reciicer.Models.Entities.PontoColeta", "PontoColeta")
                        .WithMany("UsuarioIdentities")
                        .HasForeignKey("PontoColetaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PontoColeta");
                });

            modelBuilder.Entity("Reciicer.Models.Entities.Cliente", b =>
                {
                    b.Navigation("ClientePremiacoes");

                    b.Navigation("Coletas");
                });

            modelBuilder.Entity("Reciicer.Models.Entities.Coleta", b =>
                {
                    b.Navigation("Material_Coletas");
                });

            modelBuilder.Entity("Reciicer.Models.Entities.Cooperativa", b =>
                {
                    b.Navigation("Recolhimentos");
                });

            modelBuilder.Entity("Reciicer.Models.Entities.Estoque", b =>
                {
                    b.Navigation("EstoqueMateriais");
                });

            modelBuilder.Entity("Reciicer.Models.Entities.Material", b =>
                {
                    b.Navigation("Material_Coletas");
                });

            modelBuilder.Entity("Reciicer.Models.Entities.PontoColeta", b =>
                {
                    b.Navigation("Coletas");

                    b.Navigation("Recolhimentos");

                    b.Navigation("UsuarioIdentities");
                });

            modelBuilder.Entity("Reciicer.Models.Entities.Premiacao", b =>
                {
                    b.Navigation("ClientePremiacaos");
                });

            modelBuilder.Entity("Reciicer.Models.Entities.Recolhimento", b =>
                {
                    b.Navigation("RecolhimentoMateriais");
                });

            modelBuilder.Entity("Reciicer.Models.Entities.TipoMaterial", b =>
                {
                    b.Navigation("Materiais");
                });
#pragma warning restore 612, 618
        }
    }
}
